{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://remember-pairs-game/./js/script.js"],"sourcesContent":["import '../css/vars.scss';\nimport '../css/main.scss';\nimport '../css/difficulty.scss';\nimport '../css/play.scss';\n\nlet ALL_CARDS = [\n  'hearts-6.svg',\n  'hearts-7.svg',\n  'hearts-8.svg',\n  'hearts-9.svg',\n  'hearts-10.svg',\n  'hearts-jack.svg',\n  'hearts-queen.svg',\n  'hearts-king.svg',\n  'hearts-ace.svg',\n  'diamonds-6.svg',\n  'diamonds-7.svg',\n  'diamonds-8.svg',\n  'diamonds-9.svg',\n  'diamonds-10.svg',\n  'diamonds-jack.svg',\n  'diamonds-queen.svg',\n  'diamonds-king.svg',\n  'diamonds-ace.svg',\n  'spades-6.svg',\n  'spades-7.svg',\n  'spades-8.svg',\n  'spades-9.svg',\n  'spades-10.svg',\n  'spades-jack.svg',\n  'spades-queen.svg',\n  'spades-king.svg',\n  'spades-ace.svg',\n  'clubs-6.svg',\n  'clubs-7.svg',\n  'clubs-8.svg',\n  'clubs-9.svg',\n  'clubs-10.svg',\n  'clubs-jack.svg',\n  'clubs-queen.svg',\n  'clubs-king.svg',\n  'clubs-ace.svg',\n];\n\nlet timeoutId = null;\n\nconst app = {\n  difficulty: 4,\n  duration: '',\n  generatedCards: [],\n  selectedCards: [],\n};\n\nconst difficultyScreen = document.querySelector('.difficulty-screen');\nconst difficulty = difficultyScreen.querySelector('.difficulty');\nconst difficultyButtons = difficulty.querySelectorAll('.difficulty__btn');\nconst btnStart = difficultyScreen.querySelector('.btn-start');\n\nconst gameScreen = document.querySelector('.game-screen');\n\ndifficulty.addEventListener('click', (event) => {\n  const target = event.target;\n  if (!target.classList.contains('difficulty__btn')) {\n    return;\n  }\n  difficultyButtons.forEach((btn) => {\n    btn.classList.remove('difficulty__btn_selected');\n  });\n  target.classList.add('difficulty__btn_selected');\n  app.difficulty = +target.dataset.value;\n});\n\nbtnStart.addEventListener('click', () => {\n  difficultyScreen.classList.add('hidden');\n  gameScreen.classList.remove('hidden');\n\n  generateCards(app.difficulty);\n  app.generatedCards = mix(app.generatedCards);\n  showHide5sec();\n\n  const btnReset = gameScreen.querySelector('.btn-reset');\n  btnReset.addEventListener('click', () => {\n    showHide5sec();\n  });\n});\n\nconst getRandom = (max) => Math.floor(Math.random() * max);\n\nconst mix = (array) => {\n  return (array = array.sort(() => Math.random() - 0.5));\n};\n\nconst generateCards = (difLevel) => {\n  do {\n    let randomCardId = getRandom(ALL_CARDS.length);\n    if (!app.generatedCards.includes(randomCardId)) {\n      app.generatedCards.push(randomCardId);\n    }\n  } while (app.generatedCards.length < difLevel);\n  app.generatedCards = [...app.generatedCards, ...app.generatedCards];\n};\n\nfunction hideCards() {\n  const cards = gameScreen.querySelectorAll('.card');\n  cards.forEach((card) => {\n    card.src = './static/shirt.svg';\n  });\n}\n\nconst renderCards = () => {\n  app.selectedCards = [];\n  let clicksCounter = 0;\n  const cards = gameScreen.querySelector('.game__cards');\n  cards.innerHTML = '';\n  app.generatedCards.forEach((id) => {\n    const card = document.createElement('img');\n    card.classList.add('card');\n    card.setAttribute('data-id', id);\n    card.src = `./static/${ALL_CARDS[id]}`;\n    cards.appendChild(card);\n\n    function cardClickHandler() {\n      this.src = `./static/${ALL_CARDS[id]}`;\n      if (clicksCounter % 2 === 0) {\n        app.selectedCards.push(id);\n        clicksCounter++;\n      } else {\n        if (app.selectedCards[app.selectedCards.length - 1] !== id) {\n          stopTimer();\n          alert('Игра окончена! Вы проиграли.');\n        } else {\n          app.selectedCards.push(id);\n          clicksCounter++;\n        }\n      }\n      if (app.selectedCards.length === app.generatedCards.length) {\n        stopTimer();\n        alert('Выигрыш.');\n      }\n      this.removeEventListener('click', cardClickHandler);\n    }\n\n    card.addEventListener('click', cardClickHandler);\n  });\n};\n\nfunction startTimer() {\n  if (timeoutId) {\n    return;\n  }\n  const gameTimer = gameScreen.querySelector('.game__panel-timer');\n  gameTimer.textContent = '0.00';\n  const startTime = new Date().getTime();\n  const run = () => {\n    const time = new Date().getTime() - startTime;\n    gameTimer.textContent = (time / 1000).toFixed(1);\n    timeoutId = window.setTimeout(run, 50);\n  };\n  run();\n}\n\nfunction stopTimer() {\n  if (timeoutId) {\n    clearTimeout(timeoutId);\n    timeoutId = null;\n  }\n}\n\nfunction showHide5sec() {\n  stopTimer();\n  renderCards();\n  setTimeout(function () {\n    hideCards();\n    startTimer();\n  }, 3000);\n}\n"],"names":["ALL_CARDS","timeoutId","app","difficulty","duration","generatedCards","selectedCards","difficultyScreen","document","querySelector","difficultyButtons","querySelectorAll","btnStart","gameScreen","addEventListener","event","target","classList","contains","forEach","btn","remove","add","dataset","value","generateCards","mix","showHide5sec","array","sort","Math","random","difLevel","randomCardId","max","length","floor","includes","push","renderCards","clicksCounter","cards","innerHTML","id","card","createElement","setAttribute","src","appendChild","cardClickHandler","this","stopTimer","alert","removeEventListener","clearTimeout","setTimeout","gameTimer","textContent","startTime","Date","getTime","run","time","toFixed","window","startTimer"],"sourceRoot":""}